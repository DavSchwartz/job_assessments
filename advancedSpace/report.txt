To ensure the user is able to consistently issue commands without mistakes, I made an enum for all possible commands. The user chooses commands by entering the corresponding enum number. The enums start at 1 because that is the default for Python. Data is passed from the server to the client in the form of a json. Jsons are easy to write, human readable, and are supported by the Python standard library. An excellent choice for quick prototyping when performance isn't a hard requirement.

This problem probably took around 12 hours for learning and development.

To build the c file, pass it to a compiler and include the "windows socket 2" library, or simply run the make file. The program is written for windows and is compiled with gcc.

Instructions for using both the server and the clint are in instrucions.pdf.

Improvements to the program:
The user has no indication of what is happening with the server on startup. The user doesn't know exactly why the server isn't responding to commands. It may be helpful for the server to send its state on startup to indicate it is busy restarting.